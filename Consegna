Navigazione per Neftlix React

In questo esercizio applicherai le nuove conoscenze riguardo il react-router-dom alla tua app Netflix.

Ricorda di installare il pacchetto npm con npm i react-router-dom

<!-- Crea una Route per un componente TVShows. Una semplice rotta statica, senza parametri. FATTO -->

Crea una Route parametrica per montare un componente MovieDetails. Dovr√† permettere di ricevere un parametro id dalla URL. Es. /movie-details/:movieIdCrea il componente MovieDetails per visualizzare i dettagli e i commenti del singolo film. Queste informazioni dovranno essere ottenute da delle fetch ogni qualvolta il componente MovieDetails verr√† montato; avrai bisogno di prelevare il movieId dall'URL (per recuperare sia i dettagli del film sia i suoi commenti sar√† necessario effettuare due fetch: una a omdbAPI e una alle nostre API interne)Rendete cliccabile ogni film visualizzato nella vostra pagina: dovrete navigare alla sua pagina di dettaglio, sfruttando la rotta parametrica creata sopra. Inserisci¬†l'id del film nell'URL.

EXTRA

Cambia il comportamento della SearchBar: se l'utente √® sulla pagina TVShows, il placeholder dovr√† diventare: "Cerca Serie TV..."Se non l'hai gi√† fatto, migliora l'esperienza utente aggiungendo loaders e gestione errori

üìÉ API Docs:

OMDB

Registrati su http://www.omdbapi.com/

Una volta fatto riceverai un'email con la tua API Key.

L'endpoint per ottenere i dettagli di un film sar√† cos√¨ costituito:

http://www.omdbapi.com/?apikey=[PUT_YOUR_API_KEY_HERE]&i=tt0241527

La chiamata ritorna un oggetto simile a questo:

{
"Title": "Harry Potter and the Sorcerer's Stone",
"Year": "2001",
"Rated": "PG",
"Released": "16 Nov 2001",
"Runtime": "152 min",
"Genre": "Adventure, Family, Fantasy",
"Director": "Chris Columbus",
"Writer": "J.K. Rowling (novel), Steve Kloves (screenplay)",
"Actors": "Richard Harris, Maggie Smith, Robbie Coltrane, Saunders Triplets",
"Plot": "An orphaned boy enrolls in a school of wizardry, where he learns the truth about himself, his family and the terrible evil that haunts the magical world.",
"Language": "English",
"Country": "UK, USA",
"Awards": "Nominated for 3 Oscars. Another 17 wins & 62 nominations.",
"Poster": "https://m.media-amazon.com/images/M/MV5BNjQ3NWNlNmQtMTE5ZS00MDdmLTlkZjUtZTBlM2UxMGFiMTU3XkEyXkFqcGdeQXVyNjUwNzk3NDc@._V1_SX300.jpg",
"Ratings": [
{
"Source": "Internet Movie Database",
"Value": "7.6/10"
},
{
"Source": "Rotten Tomatoes",
"Value": "81%"
},
{
"Source": "Metacritic",
"Value": "64/100"
}
],
"Metascore": "64",
"imdbRating": "7.6",
"imdbVotes": "572,463",
"imdbID": "tt0241527",
"Type": "movie",
"DVD": "28 May 2002",
"BoxOffice": "$317,557,891",
"Production": "Warner Bros. Pictures",
"Website": "http://movies.warnerbros.com/awards/harry.html",
"Response": "True"
}

COMMENTI

Hai un endpoint CRUD per commenti su:

https://striveschool-api.herokuapp.com/api/comments/

Questo significa che puoi fare il GET, DELETE, POST, PUT dei dati da l√¨.

‚ùó‚ùó‚ùó¬†IMPORTANT ‚ùó‚ùó‚ùóDovrai usare gli headers di autenticazione (Authentication headers)(prendi un nuovo token su https://strive.school/studentlogin se il precedente √® scaduto)

Il commento √® strutturato ad oggetto in questa maniera:

{
"comment": string
"rate": string,
"elementId": string
}

Dove:

comment √® il testo del commento inserito dall'utenterate √® il valore tra 1 e 5elementId √® l'imdbID del film

Esempio:

{
"comment": "A good movie but definitely I don't like many parts of the plot"
"rate": "3",
"elementId": "tt0076759"
}

‚ö†Ô∏è WARNING ‚ö†Ô∏è

Fare una GET su https://striveschool-api.herokuapp.com/api/comments/ ti ritorner√† TUTTI i commenti a database. Probabilmente a te interesser√† principalmente ricevere i commenti di un singolo film alla volta: per fare ci√≤ dovrai specificare l'imdbID del film nella tua URL:https://striveschool-api.herokuapp.com/api/comments/:elementId

Esempio:

https://striveschool-api.herokuapp.com/api/comments/tt0076759 trover√† i commenti di un singolo film.
